NAME = wolf3d


SRC_NAME = $(sort main2.c raycastingPOWERED.c print_map.c \
			parsing.c parsing2.c octant2.c utils.c Engine3D.c \
			readfile1.c)
SRC_PATH = ./src/
OBJ_PATH = ./obj/
LIBFT_PATH = ./libft/
SDL_PATH = ./SDL2.framework/Versions/Current
INC_PATH = ./includes/ $(LIBFT_PATH)includes/
OBJ_NAME = $(SRC_NAME:.c=.o)

SRC = $(addprefix $(SRC_PATH),$(SRC_NAME))
OBJ = $(addprefix $(OBJ_PATH),$(OBJ_NAME))
INC = $(addprefix -I,$(INC_PATH))

SRC = main2.c raycastingPOWERED.c print_map.c \
parsing.c parsing2.c octant2.c utils.c Engine3D.c \
readfile1.c

INC = -I includes

LIBFT = libft/libft.a

CC = gcc -g 

MLX = -L /usr/local/lib -lmlx -framework OpenGL -framework AppKit

PTHREAD = -lpthread

SDLM = `sdl2-config --cflags --libs`

#CFLAGS = -Wall -Wextra -Werror

HEADER = -I .

SDL2 = -L lib -l SDL2

SAN = -fsanitize=address

MATH = -lm

all: $(NAME)

$(NAME): $(OBJ) $(LIBFT)
	$(CC) $(HEADER) $(OBJ) -o $(NAME) $(LIBFT) $(SDLM) $(MATH)

$(LIBFT):
	make -C ./libft/

$(OBJ_PATH)%.o: $(SRC_PATH)%.c
	@printf "%-50s" "compiling "$(notdir $<)...
	@mkdir -p $(OBJ_PATH)
	@$(CC) $(CFLAGS) $(INC) -o $@ -c $<
	@printf "\e[1;32m[OK]\e[0m\n"

clean:
	make clean -C ./libft/
	rm -rf $(OBJ)

fclean: clean
	make fclean -C ./libft/
	rm -rf $(NAME)

re: fclean all
